server:
  port: 8101
  tomcat:
    accept-count: 1024
    max-threads: 1024
debug: false
headImagePath: E:\project\sika-design\quasar-sika-design-admin\quasar-sika-design\public\imgs\head\
sika:
  code:
    workspace:
      worker-id: 2
      data-center-id: 1
    rabbit:
      sender:
        log-fire: true
        ack: true
    ## ==========================restTemplate配置begin=====================================
    rest:
      template:
        maxTotal: 1500
        defaultMaxPerRoute: 1500
        connectTimeout: 12000
        readTimeout: 90000
        connectionRequestTimeout: 200
        bufferRequestBody: false
    ## ==========================restTemplate配置end=====================================
    auth:
      # jwt秘钥
      jwt-secret: ETZZN3KX194HXI82
      server-name: risk-system-server
    thirdparty:
      url:
        erpRequestDomain: http://erp-service
        erpRequestDomainHttps: https://api-gateway.52rental.com/oauth-server
        sjmhRequestDomainHttps: https://api.shujumohe.com/octopus
      erp:
        appId: 201801010001
        appSecret: cDieLmT10edZYU9diLmFMpMkZLLb1WaSk58wCuK7Nmwnmzz3wDwdYkmzzJNLgiCU
      sjmh:
        partnerCode: lxzp_mohe
        partnerKey: 18063e6db59948ce8ce301062e351fb3
    ################### 异常通知 begin ############################
    exception:
      inform:
        defaultWebHookForDingding:
      ################### 异常通知 end ############################
spring:
  rabbitmq:
    host: 120.78.74.169
    port: 5672
    username: rabbitmq
    password: 123456
    publisher-confirms: true
    publisher-returns: true
    listener:
      simple:
        acknowledge-mode: manual
        prefetch: 10
    template:
      mandatory: true

  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    sharding:
      enable: true
    hikari:
      # JDBC 配置(驱动类自动从url的mysql识别,数据源类型自动识别)
      core:
        minimum-idle: 10
        maximum-pool-size: 20
        auto-commit: true
        idle-timeout: 600000
        pool-name: DatebookHikariCP
        max-lifetime: 30000
        connection-timeout: 30000
        connection-test-query: SELECT 1
        jdbc-url: jdbc:mysql://121.89.202.68:3306/sika-design-admin?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=GMT%2B8
        username: root
        password: SikaDesignAdmin20201225
        driver-class-name:  com.mysql.cj.jdbc.Driver
        # JDBC 配置(驱动类自动从url的mysql识别,数据源类型自动识别)
      master:
        minimum-idle: 10
        maximum-pool-size: 20
        auto-commit: true
        idle-timeout: 600000
        pool-name: DatebookHikariCP
        max-lifetime: 30000
        connection-timeout: 30000
        connection-test-query: SELECT 1
        jdbc-url: jdbc:mysql://121.89.202.68:3306/sika-design-admin?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=GMT%2B8
        username: root
        password: SikaDesignAdmin20201225
        driver-class-name:  com.mysql.cj.jdbc.Driver
      single:
        minimum-idle: 10
        maximum-pool-size: 20
        auto-commit: true
        idle-timeout: 600000
        pool-name: DatebookHikariCP
        max-lifetime: 30000
        connection-timeout: 30000
        connection-test-query: SELECT 1
        jdbc-url: jdbc:mysql://121.89.202.68:3306/sika-design-admin?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=GMT%2B8
        username: root
        password: SikaDesignAdmin20201225
        driver-class-name:  com.mysql.cj.jdbc.Driver


    ################### mysq end ##########################
    ################### redis 单机版 start ##########################
  redis:
    host: 121.89.202.68
    port: 6379
    timeout: 3000
    password: SikaDesignAdmin20201225
    ################### redis 单机版 end ##########################
    #    cluster:
    #      nodes: localhost:6379
    #    nodes: 134.224.249.36:7000,134.224.249.37:7000,134.224.249.38:7000,134.224.249.36:7001,134.224.249.37:7001,134.224.249.38:7001
    ###        #130.75.131.237:7000,130.75.131.238:7000,130.75.131.239:7000,130.75.131.237:7001,130.75.131.238:7001,130.75.131.239:7001
    ##        #192.168.3.157:7000,192.168.3.158:7000,192.168.3.159:7000,192.168.3.157:7001,192.168.3.158:7001,192.168.3.159:7001


  #    timeout: 1000 # 连接超时时间（毫秒）
#    pool:
#      max-active: 2000  # 连接池最大连接数（使用负值表示没有限制）
#      max-idle: 500     # 连接池中的最大空闲连接
#      min-idle: 50     # 连接池中的最小空闲连接
#      max-wait: 1000   # 连接池最大阻塞等待时间（使用负值表示没有限制）
  redisson:
    mode: single
    single:
      address: 121.89.202.68:6379
    password: SikaDesignAdmin20201225
sharding:
  jdbc:
    config:
      props:
        sql:
          show: true

#设置最大超时时间
ribbon:
  ServerListRefreshInterval: 10  #刷新服务列表源的间隔时间
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  ReadTimeout: 90000
  ConnectTimeout: 90000
  OkToRetryOnAllOperations: false
  MaxAutoRetries: 1
  MaxAutoRetriesNextServer: 1
  eureka:
    enabled: false
# 服务ribbon的负载配置
erp-service: # ERP服务
  ribbon:
    listOfServers: advance-new-api-gateway.52rental.com/oauth-server


##feign参数优化
feign:
  compression:
    request:
      enabled: true
      mine-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response:
      enabled: true
logging:
  level:
    root: INFO
    com.netflix: OFF
    com.central: INFO
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE

me:
  zhyd:
    oauth:
      timeout: 15000
      oauthConfig:
        gitee:
          requestClassName: me.zhyd.oauth.request.AuthGiteeRequest
          clientId: 427f193cd6a3319e8f84570a21cecc563ed80c4cd4d46e647312306fa7d74329
          clientSecret: 4ec7e3ab06fbda68414bc250a28858ec51f6e6e888f692760db3c1cc578e0900
          redirectUri: http://127.0.0.1:8101/auth/callback/gitee/anon
        github:
          requestClassName: me.zhyd.oauth.request.AuthGithubRequest
          clientId: a60f78e6b3f5dcd39510
          clientSecret: a952fb6de66b6d96fd1719d53d03a6d6b03d0113
          redirectUri: http://localhost:8101/auth/callback/github/anon
        weibo:
          clientId:
          clientSecret:
          redirectUri:
        dingtalk:
          clientId:
          clientSecret:
          redirectUri:
        baidu:
          requestClassName: me.zhyd.oauth.request.AuthBaiduRequest
          clientId: VCgfYwoGjvtdiWe60qWwbLSk
          clientSecret: OhGKutO24BUGP7i46085bQWC9KdreExm
          redirectUri: http://localhost:8101/auth/callback/baidu/anon
        coding:
          clientId:
          clientSecret:
          redirectUri:
        tencentCloud:
          clientId:
          clientSecret:
          redirectUri:
        oschina:
          clientId:
          clientSecret:
          redirectUri:
        alipay:
          clientId:
          clientSecret:
          redirectUri:
          alipayPublicKey:
        qq:
          requestClassName: me.zhyd.oauth.request.AuthQqRequest
          clientId: 101931120
          clientSecret: d73650b6f64203a45bd3c503a4afa644
          redirectUri: http://quasar.admin.sikacode.com/api/auth/callback/qq/anon
        wechat:
          clientId:
          clientSecret:
          redirectUri:
        taobao:
          clientId:
          clientSecret:
          redirectUri:
        google:
          clientId:
          clientSecret:
          redirectUri:
        facebook:
          clientId:
          clientSecret:
          redirectUri:
        douyin:
          clientId:
          clientSecret:
          redirectUri:
        linkedin:
          clientId:
          clientSecret:
          redirectUri:
        microsoft:
          clientId:
          clientSecret:
          redirectUri:
        mi:
          clientId:
          clientSecret:
          redirectUri:
        toutiao:
          clientId:
          clientSecret:
          redirectUri:
        teambition:
          clientId:
          clientSecret:
          redirectUri:
        renren:
          clientId:
          clientSecret:
          redirectUri:
        pinterest:
          clientId:
          clientSecret:
          redirectUri:
        stackoverflow:
          clientId:
          clientSecret:
          redirectUri:
          stackOverflowKey:
        huawei:
          clientId:
          clientSecret:
          redirectUri:
        wechatEnterprise:
          clientId:
          clientSecret:
          redirectUri:
          agentId: